Organize data using arrays, sets, and dictionaries.

Swift provides three primary collection types.
1. Arrays - Ordered 
2. Sets - Unordered - Unique values 
3. Dictionaries - Unordered collections of key-value associations. 

Arrays, sets, and dictionaries in Swift are always clear about the types of values and keys that they can store. 
This means that you can’t insert a value of the wrong type into a collection by mistake. 
It also means you can be confident about the type of values you will retrieve from a collection.

Mutable and Immutable 
If you create an array, a set, or a dictionary, and assign it to a variable, the collection that’s created will be mutable. 
This means that you can change (or mutate) the collection after it’s created by adding, removing, or changing items in the collection. 
If you assign an array, a set, or a dictionary to a constant, that collection is immutable, and its size and contents can’t be changed.


Array:
An array stores values of the same type in an ordered list.
The same value can appear in an array multiple times at different positions.

Array<Element>
[Element] 

Creating an empty array
var someInts: [Int] = []
someInts.append(3)
someInts = []

Array with default value 
var threeDoubles = Array(repeating: 0.0, count: 3)

Combining two arrays 
var anotherThreeDoubles = Array(repeating: 2.5, count: 3)
var sixDoubles = threeDoubles + anotherThreeDoubles

Array with Array literal 
[<#value 1#>, <#value 2#>, <#value 3#>]
var shoppingList: [String] = ["Eggs", "Milk"]

Accessing and modifying an Array









